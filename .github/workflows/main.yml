on:
  push:
    branches:
    - main
    tags: ['v*.*.*']
 #, windows-latest, macOS-latest]
jobs:
  my_job:

    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-latest
          target: x86_64-pc-windows-msvc
          code-target: win32-x64
          bin-ext: .exe
        # - os: windows-latest
        #   target: i686-pc-windows-msvc
        - os: windows-latest
          target: aarch64-pc-windows-msvc
          code-target: win32-arm64
        - os: ubuntu-20.04
          target: x86_64-unknown-linux-gnu
          code-target: linux-x64
        - os: ubuntu-20.04
          target: aarch64-unknown-linux-gnu
          code-target: linux-arm64
        #- os: ubuntu-20.04
        #  target: arm-unknown-linux-gnueabihf
        #  code-target: linux-armhf
        - os: macos-14
          target: x86_64-apple-darwin
          code-target: darwin-x64
        - os: macos-14
          target: aarch64-apple-darwin
          code-target: darwin-arm64

    name: dist (${{ matrix.target }})
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      # with:
      #   submodules: recursive

    - name: Setup Rust toolchain
      run: |
        rustup update --no-self-update stable
        rustup default stable
        rustup target add ${{ matrix.target }}
        cargo install --locked cargo-zigbuild

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Setup Zig Compiler
      uses: mlugg/setup-zig@v1.2.1
        
    - name: Install Node Dependencies
      working-directory: editors/code
      run: npm ci

    - name: Cargo Build
      # working-directory: crates/owl-ms-language-server
      run: cargo zigbuild --release --target ${{ matrix.target }}

    - name: Move language server binary
      run: |
        mv target/${{ matrix.target }}/release/owl-ms-language-server${{ matrix.bin-ext }} editors/code/server/owl-ms-language-server${{ matrix.bin-ext }}

    # Disable publish till the job is seperate and after some tests
    # - name: Publish on OVSX
    #   working-directory: editors/code
    #   run: npx ovsx publish --pat ${{ secrets.PAT_OVSX }} --target ${{ matrix.code-target }}

    # - name: Publish on VSCE
    #   working-directory: editors/code
    #   run: npx vsce publish --pat ${{ secrets.PAT_VSCE }} --target ${{ matrix.code-target }}
