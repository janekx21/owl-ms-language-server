on:
  push:
    branches:
    - main
    tags: ['v*.*.*']

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-latest
          target: x86_64-pc-windows-msvc
          code-target: win32-x64
          bin-ext: .exe
        - os: ubuntu-latest
          target: x86_64-unknown-linux-musl
          code-target: linux-x64
        - os: macos-14
          target: x86_64-apple-darwin
          code-target: darwin-x64
        - os: macos-14
          target: aarch64-apple-darwin
          code-target: darwin-arm64

    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}

    outputs:
      targets: ${{ steps.set-targets.outputs.targets }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      run: |
        rustup update --no-self-update stable
        rustup default stable
        rustup target add ${{ matrix.target }}

    - if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
      uses: awalsh128/cache-apt-pkgs-action@v1
      with:
        packages: musl-tools # provides musl-gcc
        version: 1.0

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        
    - name: Install Node Dependencies
      working-directory: editors/code
      run: npm ci

    - name: Cargo Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Move language server binary
      run: |
        mv target/${{ matrix.target }}/release/owl-ms-language-server${{ matrix.bin-ext }} editors/code/server/owl-ms-language-server${{ matrix.bin-ext }}

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: extension-${{ matrix.code-target }}
        path: editors/code/
        retention-days: 1

    - name: Set targets output
      id: set-targets
      run: echo "targets=${{ matrix.code-target }}" >> $GITHUB_OUTPUT

  publish-ovsx:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        target: [win32-x64, linux-x64, darwin-x64, darwin-arm64]

    name: Publish to OVSX (${{ matrix.target }})
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: extension-${{ matrix.target }}
        path: editors/code/

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Publish on OVSX
      working-directory: editors/code
      run: npx ovsx publish --pat ${{ secrets.PAT_OVSX }} --target ${{ matrix.target }}

  publish-vsce:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        target: [win32-x64, linux-x64, darwin-x64, darwin-arm64]

    name: Publish to VSCE (${{ matrix.target }})
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: extension-${{ matrix.target }}
        path: editors/code/

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Publish on VSCE
      working-directory: editors/code
      run: npx vsce publish --pat ${{ secrets.PAT_VSCE }} --target ${{ matrix.target }}
