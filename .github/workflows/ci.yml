on:
  pull_request:
  merge_group:

jobs:
  test_rust:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-latest
          target: x86_64-pc-windows-msvc
          code-target: win32-x64
          bin-ext: .exe
        # NOT WORKING
        # - os: windows-latest
        #   target: i686-pc-windows-msvc
        # NOT WORKING
        # - os: windows-latest
        #   target: aarch64-pc-windows-msvc
        #   code-target: win32-arm64
        - os: ubuntu-latest
          target: x86_64-unknown-linux-musl
          code-target: linux-x64
        # NOT WORKING
        # - os: ubuntu-20.04
        #   target: aarch64-unknown-linux-gnu
        #   code-target: linux-arm64
        # NOT WORKING
        #- os: ubuntu-20.04
        #  target: arm-unknown-linux-gnueabihf
        #  code-target: linux-armhf
        - os: macos-14
          target: x86_64-apple-darwin
          code-target: darwin-x64
        - os: macos-14
          target: aarch64-apple-darwin
          code-target: darwin-arm64

    name: Build and test rust workspace (${{ matrix.target }})
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      run: |
        rustup update --no-self-update stable
        rustup default stable
        rustup target add ${{ matrix.target }}

    - if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
      uses: awalsh128/cache-apt-pkgs-action@v1
      with:
        packages: musl-tools # provides musl-gcc
        version: 1.0

    - name: Cargo Test
      run: cargo test --target ${{ matrix.target }}

  test_tree_sitter:
    runs-on: ubuntu-latest
    name: Test tree-sitter grammar

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: tree-sitter-check
      working-directory: crates/tree-sitter-owl-ms
      run: npx tree-sitter-cli test

    # TODO test node
    # - name: Setup Node
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: '22.x'
        
    # - name: Install Node Dependencies
    #   working-directory: editors/code
    #   run: npm ci
    #

